apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  labels:
    app: nginx
spec:
  selector:
    app: nginx
  # Typ: ClusterIP, NodePort oder LoadBalancer (abh. von deiner k3s-Konfiguration)
  # Für direkten Zugriff auf Port 80 im Cluster kannst du ClusterIP belassen und ggf. ein Ingress nutzen.
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  annotations:
    # In vielen k3s-Setups übernimmt Traefik das Ingress-Routing.
    # Falls du einen anderen Ingress-Controller nutzt, passe das entsprechend an.
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: nginx.local   # Optionaler Hostname
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port:
                  number: 80
